{"remainingRequest":"/Users/shiraishi/my-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shiraishi/my-blog/node_modules/vuepress-plugin-redirect/lib/enhanceApp.js","dependencies":[{"path":"/Users/shiraishi/my-blog/node_modules/vuepress-plugin-redirect/lib/enhanceApp.js","mtime":1589563522587},{"path":"/Users/shiraishi/my-blog/node_modules/cache-loader/dist/cjs.js","mtime":1589563520756},{"path":"/Users/shiraishi/my-blog/node_modules/babel-loader/lib/index.js","mtime":1589563520696}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../src/enhanceApp.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { join } from 'path';\n// eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n// @ts-ignore\nimport pluginRedirectOptions from '@dynamic/plugin-redirect-options';\nconst options = pluginRedirectOptions;\nconst enhanceApp = ({ router, siteData }) => {\n    const { routes = [] } = router.options;\n    const { redirectors: rawRedirectors = [] } = options;\n    // if a path has corresponding route\n    function hasRoute(path) {\n        return routes.some(route => route.path.toLowerCase() === path.toLowerCase());\n    }\n    // get the route or fallback route of a path\n    function getFallbackRoute(path) {\n        // if has exact route\n        if (hasRoute(path))\n            return path;\n        // if has route with /\n        if (!/\\/$/.test(path)) {\n            const endingSlashUrl = path + '/';\n            if (hasRoute(endingSlashUrl))\n                return endingSlashUrl;\n        }\n        // if has route with .html\n        if (!/\\.html$/.test(path)) {\n            const endingHtmlUrl = path.replace(/\\/$/, '') + '.html';\n            if (hasRoute(endingHtmlUrl))\n                return endingHtmlUrl;\n        }\n        return null;\n    }\n    // locales redirector\n    if (options.locales && siteData.locales) {\n        // resolve locales config from siteData\n        const siteLocales = siteData.locales;\n        const localeKeys = Object.keys(siteLocales);\n        const locales = localeKeys.map(key => ({\n            key: key.replace(/^\\/|\\/$/, ''),\n            lang: siteLocales[key].lang,\n        }));\n        // resolve locales config from plugin options\n        if (typeof options.locales !== 'object') {\n            options.locales = {};\n        }\n        const { fallback, storage = true } = options.locales;\n        if (fallback) {\n            localeKeys.unshift(fallback);\n        }\n        // add locales redirector\n        rawRedirectors.unshift({\n            storage,\n            base: '/',\n            alternative() {\n                if (typeof window !== 'undefined' && window.navigator) {\n                    const langs = window.navigator.languages || [\n                        window.navigator.language,\n                    ];\n                    const locale = locales.find(({ lang }) => langs.includes(lang));\n                    if (locale) {\n                        return locale.key;\n                    }\n                }\n                return localeKeys;\n            },\n        });\n    }\n    // all redirectors\n    const redirectors = rawRedirectors.map(({ base = '/', storage: rawStorage = false, alternative }) => {\n        let storage = false;\n        if (rawStorage) {\n            if (typeof rawStorage !== 'object') {\n                const key = typeof rawStorage !== 'string'\n                    ? `vuepress:redirect:${base}`\n                    : rawStorage;\n                storage = {\n                    get() {\n                        if (typeof localStorage === 'undefined')\n                            return null;\n                        return localStorage.getItem(key);\n                    },\n                    set(val) {\n                        if (typeof localStorage === 'undefined')\n                            return;\n                        localStorage.setItem(key, val);\n                    },\n                };\n            }\n            else if (rawStorage.get && rawStorage.set) {\n                // warning\n                storage = rawStorage;\n            }\n        }\n        return {\n            base,\n            storage,\n            alternative,\n        };\n    });\n    router.beforeEach((to, from, next) => {\n        // if router exists, skip redirection\n        const fallback = getFallbackRoute(to.path);\n        if (fallback)\n            return next();\n        let target;\n        for (const redirector of redirectors) {\n            const { base = '/', storage = false } = redirector;\n            let { alternative } = redirector;\n            if (!to.path.startsWith(base))\n                continue;\n            // get rest of the path\n            // ensure ending slash at root\n            const rest = to.path.slice(base.length) || '/';\n            if (storage) {\n                const alt = storage.get(redirector);\n                if (alt) {\n                    const path = getFallbackRoute(join(base, alt, rest));\n                    if (path) {\n                        target = path;\n                        break;\n                    }\n                }\n            }\n            // resolve alternatives\n            if (typeof alternative === 'function') {\n                alternative = alternative(rest);\n            }\n            if (!alternative)\n                continue;\n            if (typeof alternative === 'string') {\n                alternative = [alternative];\n            }\n            for (const alt of alternative) {\n                const path = getFallbackRoute(join(base, alt, rest));\n                if (path) {\n                    target = path;\n                    break;\n                }\n            }\n            if (target)\n                break;\n        }\n        next(target);\n    });\n    router.afterEach(to => {\n        // if router doesn't exist, skip storage\n        if (!hasRoute(to.path))\n            return;\n        for (const redirector of redirectors) {\n            const { base, storage } = redirector;\n            if (!storage || !to.path.startsWith(base))\n                continue;\n            const alt = to.path.slice(base.length).split('/')[0];\n            if (alt) {\n                storage.set(alt, redirector);\n            }\n        }\n    });\n};\nexport default enhanceApp;\n//# sourceMappingURL=enhanceApp.js.map"]}]}